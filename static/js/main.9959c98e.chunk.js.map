{"version":3,"sources":["components/Form.js","components/Results.js","components/NoResults.js","components/App.js","index.js"],"names":["Form","state","amount","submitFormHandler","event","preventDefault","_this","props","lbsToKilo","setState","_this2","this","react_default","a","createElement","onSubmit","htmlFor","name","value","type","onChange","target","Component","Results","_ref","pounds","NoResults","App","correctInput","convertLbsToKilograms","isNaN","kilograms","toFixed","renderResult","components_Results","components_NoResults","class","className","components_Form","render","components_App","document","getElementById"],"mappings":"2LA+BeA,oNA3BbC,MAAQ,CACNC,OAAQ,KAKVC,kBAAoB,SAACC,GACjBA,EAAMC,iBACNC,EAAKC,MAAMC,UAAUF,EAAKL,MAAMC,QAChCI,EAAKG,SAAS,CAACP,OAAQ,6EAIlB,IAAAQ,EAAAC,KACJ,OACEC,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,KAAKR,mBACpBS,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,UAAf,iBACAJ,EAAAC,EAAAC,cAAA,SAAOG,KAAK,SAASC,MAAOP,KAAKV,MAAMC,OACrCiB,KAAK,OACLC,SAAU,SAAChB,GAAD,OAAUM,EAAKD,SAAS,CAACP,OAAQE,EAAMiB,OAAOH,WAE1DN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,SAASD,MAAM,mBAvBlBI,cCEJC,EAFC,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,OAAF,OAAeb,EAAAC,EAAAC,cAAA,wBAAgBW,ICGhCC,EAHG,kBAAMd,EAAAC,EAAAC,cAAA,mDCoDTa,6MA5Cb1B,MAAQ,CACNwB,OAAQ,EACRG,cAAc,KAKlBC,sBAAwB,SAACJ,GACtB,GAAIA,IAAWK,MAAML,GAAS,CAC5B,IAAMM,EAAYN,EAAS,IAC3BnB,EAAKG,SAAS,CACdgB,OAAQM,EAAUC,QAAQ,GAC1BJ,cAAc,SAGhBtB,EAAKG,SAAS,CAACmB,cAAc,OAOhCK,aAAe,WACZ,OAAI3B,EAAKL,MAAM2B,aACNhB,EAAAC,EAAAC,cAACoB,EAAD,CAAST,OAAQnB,EAAKL,MAAMwB,SAE7Bb,EAAAC,EAAAC,cAACqB,EAAD,+EAKT,OACEvB,EAAAC,EAAAC,cAAA,OAAKsB,MAAM,aACTxB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,mBACfzB,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,OAAKsB,MAAM,iBACTxB,EAAAC,EAAAC,cAACwB,EAAD,CAAO9B,UAAWG,KAAKkB,wBACtBlB,KAAKsB,wBAxCIX,aCAlBiB,iBAAO3B,EAAAC,EAAAC,cAAC0B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.9959c98e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Form extends Component {\n  // sets up initial state\n  state = {\n    amount: 0\n  };\n\n\n// handles form submission\n  submitFormHandler = (event) => {\n      event.preventDefault();\n      this.props.lbsToKilo(this.state.amount);\n      this.setState({amount: 0});\n\n};\n\n  render() {\n       return (\n         <form onSubmit={this.submitFormHandler}>\n          <label htmlFor=\"weight\" >Enter Weight:</label>\n          <input name=\"weight\" value={this.state.amount}\n            type=\"text\"\n            onChange={(event)=> this.setState({amount: event.target.value})}\n            />\n          <input type=\"submit\" value=\"Submit\"/>\n         </form>\n       );\n     }\n}\n\nexport default Form;\n","import React from 'react';\n\nconst Results = ({pounds}) =>  <h2>Kilograms: {pounds}</h2>;\n\nexport default Results;\n","import React from 'react';\n\nconst NoResults = () => <h2>Please enter a number greater than 0</h2>\n\n\nexport default NoResults;\n","import React, { Component } from 'react';\nimport 'normalize.css';\nimport Form from './Form';\nimport Results from './Results';\nimport NoResults from './NoResults';\n\n\nclass App extends Component {\n\n// sets up initial state\n  state = {\n    pounds: 0,\n    correctInput: true\n  };\n\n\n//receives input and converts to kilos; passed via props\nconvertLbsToKilograms = (pounds) => {\n   if (pounds && !isNaN(pounds)) {\n     const kilograms = pounds / 2.2;\n     this.setState({\n     pounds: kilograms.toFixed(2),\n     correctInput: true\n   });\n } else {\n   this.setState({correctInput: false});\n }\n\n };\n\n\n// dynamic rendering depending on the input value\nrenderResult = () => {\n   if (this.state.correctInput) {\n     return <Results pounds={this.state.pounds} />\n   }\n    return <NoResults />\n};\n\n\nrender() {\n  return (\n    <div class=\"container\">\n      <div className=\"center-content\"></div>\n      <h1>Pounds to Kilograms</h1>\n      <div class=\"lower-content\">\n        <Form  lbsToKilo={this.convertLbsToKilograms}/>\n        {this.renderResult()}\n      </div>\n    </div>\n  );\n }\n}\n\nexport default App;\n","//  Created by Elijah on December 11, 2018\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport \"./sass/main.scss\";\nimport App from './components/App';\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}